---
import Layout from '../../layouts/Layout.astro'
import Navigation from '../../components/Navigation'
import Footer from '../../components/Footer'
import { getCollection, type CollectionEntry } from 'astro:content'

export async function getStaticPaths() {
  const articles = await getCollection('articles')
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: article,
  }))
}

type Props = CollectionEntry<'articles'>

const article = Astro.props
const { Content } = await article.render()

function formatDate(date: Date) {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  })
}
---

<Layout title={`${article.data.title} - Henok Wehibe`}>
  <Navigation client:load />
  
  <main class="pt-20">
    <article class="container mx-auto px-6 py-20 max-w-4xl">
      {/* Article Header */}
      <header class="mb-12 text-center">
        {article.data.featured && (
          <span class="inline-block px-4 py-2 bg-gradient-to-r from-blue-600/20 to-purple-600/20 text-blue-300 font-semibold rounded-full border border-blue-500/30 mb-6">
            Featured Article
          </span>
        )}
        
        <h1 class="text-4xl md:text-5xl font-bold mb-6 text-white leading-tight">
          {article.data.title}
        </h1>
        
        <p class="text-xl text-gray-400 mb-8 leading-relaxed max-w-2xl mx-auto">
          {article.data.description}
        </p>
        
        <div class="flex flex-wrap items-center justify-center gap-4 text-gray-500 mb-8">
          <time datetime={article.data.pubDate.toISOString()}>
            {formatDate(article.data.pubDate)}
          </time>
          
          <span>•</span>
          
          <span>by {article.data.author}</span>
          
          {article.data.updatedDate && (
            <>
              <span>•</span>
              <span>Updated {formatDate(article.data.updatedDate)}</span>
            </>
          )}
        </div>
        
        {article.data.tags && (
          <div class="flex flex-wrap gap-2 justify-center">
            {article.data.tags.map((tag) => (
              <span class="px-3 py-1 bg-purple-600/20 text-purple-300 rounded-full text-sm border border-purple-500/30">
                {tag}
              </span>
            ))}
          </div>
        )}
      </header>

      {/* Article Content */}
      <div class="prose prose-invert prose-lg max-w-none">
        <div class="article-content">
          <Content />
        </div>
      </div>

      {/* Article Footer */}
      <footer class="mt-16 pt-8 border-t border-gray-700">
        <div class="text-center">
          <p class="text-gray-400 mb-6">
            Thanks for reading! Have questions or feedback about this article?
          </p>
          <a 
            href="/contact"
            class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-full hover:from-blue-700 hover:to-purple-700 transition-all duration-300 transform hover:scale-105"
          >
            Get In Touch
            <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
            </svg>
          </a>
        </div>
        
        <div class="text-center mt-8">
          <a 
            href="/articles"
            class="text-blue-400 hover:text-blue-300 font-semibold transition-colors duration-200"
          >
            ← Back to All Articles
          </a>
        </div>
      </footer>
    </article>
  </main>
  
  <Footer client:idle />
</Layout>

<style>
  .article-content {
    color: rgb(209 213 219);
    line-height: 1.75;
  }
  
  .article-content h1, .article-content h2, .article-content h3, .article-content h4 {
    color: white;
    font-weight: bold;
    margin-bottom: 1rem;
    margin-top: 2rem;
  }
  
  .article-content h1 { font-size: 1.875rem; }
  .article-content h2 { font-size: 1.5rem; }
  .article-content h3 { font-size: 1.25rem; }
  .article-content h4 { font-size: 1.125rem; }
  
  .article-content p {
    margin-bottom: 1.5rem;
  }
  
  .article-content ul, .article-content ol {
    margin-bottom: 1.5rem;
    margin-left: 1.5rem;
  }
  
  .article-content li {
    margin-bottom: 0.5rem;
  }
  
  .article-content blockquote {
    border-left: 4px solid rgb(59 130 246);
    padding-left: 1.5rem;
    font-style: italic;
    color: rgb(156 163 175);
    margin: 1.5rem 0;
  }
  
  .article-content pre {
    background-color: rgb(17 24 39);
    border: 1px solid rgb(55 65 81);
    border-radius: 0.5rem;
    padding: 1.5rem;
    overflow-x: auto;
    margin-bottom: 1.5rem;
  }
  
  .article-content code {
    background-color: rgb(31 41 55);
    color: rgb(147 197 253);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
  }
  
  .article-content pre code {
    background-color: transparent;
    padding: 0;
  }
  
  .article-content a {
    color: rgb(96 165 250);
    text-decoration: underline;
    transition: color 0.2s;
  }
  
  .article-content a:hover {
    color: rgb(147 197 253);
  }
  
  .article-content strong {
    color: white;
    font-weight: 600;
  }
  
  .article-content hr {
    border-color: rgb(55 65 81);
    margin: 2rem 0;
  }
  
  .article-content table {
    width: 100%;
    border-collapse: collapse;
    border: 1px solid rgb(55 65 81);
    margin: 1.5rem 0;
  }
  
  .article-content th, .article-content td {
    border: 1px solid rgb(55 65 81);
    padding: 1rem;
    text-align: left;
  }
  
  .article-content th {
    background-color: rgb(31 41 55);
    font-weight: 600;
    color: white;
  }
</style>
