---
import Layout from '../../layouts/Layout.astro'
import Navigation from '../../components/Navigation'
import Footer from '../../components/Footer'
import { getCollection } from 'astro:content'

const articles = await getCollection('articles')
const sortedArticles = articles.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())

function formatDate(date: Date) {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long', 
    day: 'numeric'
  })
}
---

<Layout title="Articles - Henok Wehibe">
  <Navigation client:load />
  
  <main class="pt-20">
    <div class="container mx-auto px-6 py-20">
      <div class="text-center mb-16">
        <h1 class="text-4xl md:text-6xl font-bold mb-4 bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
          Technical Articles
        </h1>
        <p class="text-gray-400 text-lg max-w-2xl mx-auto">
          In-depth articles about my projects, technologies, and development insights
        </p>
      </div>

      <div class="max-w-4xl mx-auto space-y-8">
        {sortedArticles.map((article, index) => (
          <article class="bg-gradient-to-br from-gray-800 to-gray-900 rounded-xl p-8 border border-gray-700 hover:border-blue-500/50 transition-all duration-300 group">
            <div class="flex flex-col md:flex-row md:items-center justify-between mb-4">
              <div class="flex-1">
                {article.data.featured && (
                  <span class="inline-block px-3 py-1 bg-gradient-to-r from-blue-600/20 to-purple-600/20 text-blue-300 text-sm font-semibold rounded-full border border-blue-500/30 mb-3">
                    Featured Article
                  </span>
                )}
                <h2 class="text-2xl md:text-3xl font-bold mb-3 text-white group-hover:text-blue-400 transition-colors duration-200">
                  <a href={`/articles/${article.slug}`} class="hover:underline">
                    {article.data.title}
                  </a>
                </h2>
                <p class="text-gray-400 mb-4 leading-relaxed">
                  {article.data.description}
                </p>
              </div>
            </div>

            <div class="flex flex-wrap items-center gap-4 text-sm text-gray-500">
              <time datetime={article.data.pubDate.toISOString()}>
                {formatDate(article.data.pubDate)}
              </time>
              
              <span>•</span>
              
              <span>by {article.data.author}</span>
              
              {article.data.tags && (
                <>
                  <span>•</span>
                  <div class="flex flex-wrap gap-2">
                    {article.data.tags.map((tag: string) => (
                      <span class="px-2 py-1 bg-purple-600/20 text-purple-300 rounded text-xs border border-purple-500/30">
                        {tag}
                      </span>
                    ))}
                  </div>
                </>
              )}
            </div>

            <div class="mt-6">
              <a 
                href={`/articles/${article.slug}`}
                class="inline-flex items-center text-blue-400 hover:text-blue-300 font-semibold transition-colors duration-200 group"
              >
                Read Full Article
                <svg class="ml-2 w-4 h-4 transition-transform duration-200 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
              </a>
            </div>
          </article>
        ))}
      </div>
    </div>
  </main>
  
  <Footer client:idle />
</Layout>
